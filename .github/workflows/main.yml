name: CI

on:
  push:
    branches: [main]

jobs:

  secret-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Creating exclude path
        run: |
          mkdir -p configuration
          echo 'app/' > configuration/exclude_path.txt

      - uses: max/secret-scan@master
        with:
          exclude_path: 'configuration/exclude_path.txt'

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - name: Build docker-compose
        run: docker-compose -f docker-compose.yml up --build -d

  sca:
    runs-on: ubuntu-latest
    steps:
      - name: Check out master
        uses: actions/checkout@master

      - name: Install python
        uses: actions/setup-python@v1
        with:
          python-version: "3.6"
      
      - name: Install safety
        run:
          pip install safety
      
      - name: sca analysis
        run: 
          safety check -r app/web/requirements.txt > safety-logs.txt

      - uses: actions/upload-artifact@v2
        with:
          name: logs
          path: safety-logs.txt
          
  sast:
    needs: [build, sca]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2 
        
      - run: |
          mkdir -p logs/      
      
      - uses: jpetrucciani/bandit-check@master
        with:
          path: '.'
          bandit_flags: '-lll -o logs/output.json -f json'
    
      - uses: actions/upload-artifact@v2
        with:
          name: logs
          path: logs/output.json
  test:
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        
      - name: Set up Python 3.6
        uses: actions/setup-python@v1
        with:
          python-version: "3.6"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r tests/requirements.txt
        
      - name: Run functional tests
        run: |
          python tests/test_01.py
       
      - name: Run path traversal tests
        run: |
          python tests/test_03.py
          
      - name: Run remote code execution tests
        run: |
          python tests/test_04.py
          
  container-scan:
    needs: [test, sast]
    runs-on: ubuntu-latest

    steps:
      - name: Run Dockle
        uses: erzz/dockle-action@v1.1.1
        with:
          image: sristisravan/tic4302-demo
          report-format: json
          report-name: dockle-report
          
      - name: Upload Report
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Dockle Report
          path: dockle-report.json
  
  deploy:
    needs: [container-scan]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build docker-compose
        run: docker-compose -f docker-compose.yml up -d
  
  secure-runtime:
    needs: [deploy]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Check Container Runtime Security
        run: |
          git clone https://github.com/docker/docker-bench-security.git
          cd docker-bench-security
          sudo sh docker-bench-security.sh
